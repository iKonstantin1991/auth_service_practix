"""create init tables

Revision ID: 75f3ca85da23
Revises: 
Create Date: 2024-05-30 09:51:34.292573

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '75f3ca85da23'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_logins',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('user_device_type', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_device_type'),
    sa.UniqueConstraint('id', 'user_device_type'),
    postgresql_partition_by='LIST (user_device_type)'
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###

    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_logins_mobile" PARTITION OF "user_logins" FOR VALUES IN ('mobile')""")
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_logins_tablet" PARTITION OF "user_logins" FOR VALUES IN ('tablet')""")
    op.execute("""CREATE TABLE IF NOT EXISTS "user_logins_pc" PARTITION OF "user_logins" FOR VALUES IN ('pc')""")
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_logins_unknown" PARTITION OF "user_logins" FOR VALUES IN ('unknown')""")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_role')
    op.drop_table('user_logins')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###

    op.execute("""DROP TABLE IF EXISTS "user_logins_mobile" """)
    op.execute("""DROP TABLE IF EXISTS "user_logins_tablet" """)
    op.execute("""DROP TABLE IF EXISTS "user_logins_pc" """)
    op.execute("""DROP TABLE IF EXISTS "user_logins_unknown" """)
